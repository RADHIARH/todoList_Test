{"version":3,"sources":["redux/reducer/reducer.js","redux/reducer/index.js","redux/Store.js","redux/LocalStorage.js","components/ListTask.jsx","redux/action/index.js","components/Addtask.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","tasks","reducer","state","action","desc","data","idd","val","id","id1","val1","desc1","val3","id2","val2","type","maxid","reduce","acc","current","description","isDone","index","findIndex","element","newTasks","elementsIndex","newArray","filter","tasktoedit","rootreducers","combineReducers","statetoload","localStorage","State","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringify","setItem","console","log","saveState","getState","Listtask","useSelector","useState","showedit","setshowedit","show","setshow","edit","setedit","input","setinput","dispatch","useDispatch","Delete","deletetask","alert","ShowTask","showtask","Edit","EditTask","Done","done","payload","className","style","width","onClick","map","key","backgroundColor","defaultValue","placeholder","onChange","event","target","value","class","draggable","animationName","Addtask","htmlFor","ListTask","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ba456b8f.chunk.js","sourcesContent":["const initialState={\n    tasks: [],\n}\nconst reducer = ( state =initialState,action\n) => {\n  const desc = action.data;\n  const idd = action.val;\n  const id = action.id;\n  const id1 = action.val1;\n  const desc1 = action.val3;\n  const id2 = action.val2;\n\n  switch (action.type) {\n    case \"addtask\":\n      const maxid = state.tasks.reduce(\n        (acc, current) => (current.id > acc ? current.id : acc),\n        0\n      );\n        \n      return {\n        ...state,\n        tasks: [\n          ...state.tasks,\n          {\n            id: maxid + 1,\n            description: desc,\n            isDone: false,\n          },\n        ],\n        \n      };\n    case \"done\":\n      const index = state.tasks.findIndex((element) => element.id === idd);\n      const newTasks = [...state.tasks];\n      newTasks[index].isDone = !newTasks[index].isDone;\n      return {\n        ...state,\n        tasks: newTasks,\n      };\n    case \"edit\":\n      const elementsIndex = state.tasks.findIndex(\n        (element) => element.id === id2\n      );\n      const newArray = [...state.tasks];\n      newArray[elementsIndex].description = desc1;\n      return {\n        ...state,\n        tasks: newArray,\n        \n      };\n    case \"deletetask\":\n      return {\n        ...state,\n        tasks: state.tasks.filter((element) => element.id !== id),\n      };\n    \n      case \"show\":\n      return {\n        ...state,\n        tasktoedit: state.tasks.filter((element) => element.id === id1),\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import reducer from \"./reducer\";\nimport { combineReducers } from \"redux\"\nconst rootreducers = combineReducers({\n  reducer,\n  });\nexport default rootreducers;\n","import { createStore } from \"redux\";\nimport rootreducers from \"./reducer\";\nimport { loadState } from \"./LocalStorage\";\nimport { saveState } from \"./LocalStorage\";\nconst statetoload = loadState();\nconst store = createStore(rootreducers, statetoload);\nstore.subscribe(() => saveState(\n  {reducer:store.getState().reducer}\n  ));\nexport default store;\n","export const loadState = () => {\n    try {\n      const State = localStorage.getItem('state');\n      if (State === null) {\n        return undefined;\n      }\n      return JSON.parse(State);\n    } catch (err) {\n      return undefined;\n    }\n};\nexport const saveState = (state) => {\n  try {\n    const State = JSON.stringify(state);\n    localStorage.setItem(\"state\", State);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport default localStorage;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { filterTasks } from '../redux/action';\nimport { deletetask } from '../redux/action';\nimport { showtask } from '../redux/action';\nimport { done } from '../redux/action';\nimport {EditTask} from '../redux/action';\nconst Listtask = () => {\n          // Hooks\n         const state = useSelector((state) => state.reducer);\n         const [showedit, setshowedit] = useState(true);\n         const[show,setshow]=useState(\"\");\n         const[edit,setedit]=useState(0);\n         const [input, setinput] = useState();\n        //  functions\n         const dispatch = useDispatch();\n         const Delete=(id)=>{\n        dispatch(deletetask(id))\n        alert(\"Task deleted\")\n                   }\n        const ShowTask=(id)=>{\n        dispatch(showtask(id))\n        setshowedit(true)\n        setedit(id)\n                   }\n        const Edit=(id,desc)=>{\n        dispatch(EditTask(id,desc))\n        setshowedit(false)}\n        const Done=(id)=>{\n        dispatch(done(id))\n                   }\n        const filter=(done)=>{\n            dispatch(filterTasks(done));\n                 setshow(done)\n                     }\n                   \n                    return (\n                        <div className=\" row list\">  \n                            <div className=\"row d-flex\">\n                                <div className=\"col m-4\">\n                                <button className=\" btn btn-light\" style={{width:\"30%\"}} onClick={()=>setshow(\"\")}>All Tasks</button>\n                                </div>\n                                    <div className=\"col m-4\"><button className=\"btn btn-success\" style={{width:\"30%\"}} onClick={()=>filter(true)}>Done Tasks</button>\n                                    </div>\n                                    <div className=\"col m-4\"><button className=\"btn btn-danger\" style={{width:\"50%\"}} onClick={()=>filter(false)}>Not done Tasks</button>\n                                    </div>\n                                    \n                                </div>\n                            { show ===\"\" ?(\n                            <div className=\" m-4 \">\n                                <div className=\"div row\">\n                                    {state.tasks.map((element,key)=>{\n                                                return(\n                                                    element.isDone===false ?(\n                                                        <>\n                                                        <div className='col d-flex tasklist' >\n                                                            <div className='card m-2 p-2'  style={{backgroundColor:\"#FF0005\"}}>\n                                                                <h3 className=\"color-black description m-2 \" >{element.description}<i className=\"fas fa-exclamation-triangle m-2\"></i></h3>\n                                                                {/* edit task */}\n                                                                {edit===element.id &&showedit===true   ?(\n                                                                <div className='m-3  '  >\n                                                                        {state.tasktoedit.map((element,key)=>{\n                                                                                    return (\n                                                                                    <div className=' d-flex'>\n                                                                                            <input type=\"text\" className='form-control m-2' defaultValue={element.description} placeholder=\"\" onChange={event=>setinput(event.target.value)}></input>\n                                                                                            <button className='btn btn-primary m-2' onClick={()=>Edit(element.id,input)}>Edit</button>\n                                                                                    </div>\n                                                                                    )\n                                                                                })\n                                                                        }\n                                                                </div>\n                                                                ):null}\n                                                            </div>\n                                                            <i className=\"fas fa-edit text-black \"  onClick={()=>ShowTask(element.id)} id={element.id}>  </i>\n                                                            <i class=\"fas fa-trash-alt\" onClick={()=>Delete(element.id)}></i>\n                                                            <i className=\"fas fa-check text-success\"  onClick={()=>Done(element.id)}></i>\n                                                        </div> \n                                                        </>      \n                                                    ):\n                                                        <div className='col d-flex tasklist' >\n                                                            <div className='card m-2 p-2 ' style={{backgroundColor:\"#A5CC89\"}}>\n                                                                <h3 className=\"color-black m-2\" >{element.description}  <i class=\"fas fa-check text-white m-2\"></i>  </h3>\n                                                                    {/* edit task */}\n                                                                    {edit===element.id &&showedit===true   ? (\n                                                                        <div className='m-3  '  >\n                                                                             {state.tasktoedit.map((element,key)=>{\n                                                                                return (\n                                                                                <div className=' d-flex'>\n                                                                                   <input type=\"text\" className='form-control m-2' defaultValue={element.description} placeholder=\"\" onChange={event=>setinput(event.target.value)}></input>\n                                                                                   <button className='btn btn-primary m-2' onClick={()=>Edit(element.id,input)}>Edit</button>\n                                                                                </div>\n                                                                                        )\n                                                                                 }) \n                                                                                }\n                                                                        </div>)\n                                                                           :null}\n                                                            </div>\n                                                            <i className=\"fas fa-edit text-black \"  onClick={()=>ShowTask(element.id)} id={element.id}>  </i>\n                                                            <i class=\"fas fa-trash-alt\" onClick={()=>Delete(element.id)}></i>\n                                                            <i class=\"fas fa-times-circle text-danger\" onClick={()=>Done(element.id)}></i>\n                                                                \n                                                        </div>\n                                                )\n                                            }) \n                                        }\n                                        </div>\n\n                            </div>)\n                            //  Filter\n                            //  isdone===false\n                            : ( show===false ?\n                                    <div>\n                                        <div className=\" row m-4\">\n                                            {state.tasks.filter(element=> element.isDone===false).map((element,key)=>{  \n                                            return(\n                                                <div className=\"col\">\n                                                        <div className=\"card m-4 \"  draggable=\"true\" style={{backgroundColor:\"#FF0005\",width:\"350px\", animationName: \"slidein\"}} >\n                                                            <div className=\"card-header\">\n                                                            <h3>  You have to do<i class=\"far fa-grin-beam-sweat fs-4 m-2\"></i>  </h3>\n                                                            </div>\n                                                            <div className=\"card-body \">\n                                                            <h3 className=\"color-black m-1\" >{element.description}</h3>\n                                                            </div>\n                                                        </div>\n                                                        </div>\n                                            )})}\n                                        </div>  \n                            </div>   \n                            // filter isdone===true\n                            : show===true?\n                                <div className=\" row m-4\">\n                                    {state.tasks.filter(element=>element.isDone===true).map((element,key)=>{\n                                        return(\n                                            <div className=\"col\">\n                                                <div className=\"card m-4 \"  style={{backgroundColor:\"#A5CC89\",width:\"350px\"}} >\n                                                    <div className=\"card-header \">\n                                                        <h3> You've done: <i className=\"far fa-smile-wink fs-4  m-2\"></i>  </h3>\n                                                    </div>\n                                                    <div className=\"card-body \">\n                                                        <h3 className=\"color-black\" >{element.description}</h3>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                                        )})}\n                                </div>\n                            :null)}        \n                        </div>\n                    );\n                }\n\n                export default Listtask;\n","import store from \"../Store\";\nexport const addTask = (description) => {\n  return {\n    type: \"addtask\",\n    data: description,\n  };\n};\nexport const done = (id) => {\n  return {\n    type: \"done\",\n    val: id,\n  };\n};\nexport const filterTasks = (isDone) => {\n  return {\n    type: \"filtertasks\",\n    payload: isDone,\n    tasks:store.getState().reducer.tasks\n  };\n};\nexport const deletetask = (id) => {\n  return {\n    type: \"deletetask\",\n    id: id,\n  };\n};\nexport const showtask = (id) => {\n  return {\n    type: \"show\",\n    val1: id,\n  };\n};\nexport const EditTask = (id, desc) => {\n  return {\n    type: \"edit\",\n    val2: id,\n    val3: desc,\n  };\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from '../redux/action';\nimport ListTask from './ListTask';\n\nconst Addtask = () => {\n        const [input,setinput]=useState();\n        const dispatch = useDispatch();\n        const add=(desc)=>{\n        dispatch(addTask(desc));   \n         setinput('');\n                          }\n            return (\n            <div className=\"addtask\">\n                <div className=\"card\">\n                    <div className=\"card-header text-center\">\n                            <h3 className='text-white'>TO DO LIST</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group \">\n                        <label htmlFor=\"task\" className='text-white'>\n                                        Add a task to do\n                        </label>                         \n                            <input \n                            className=\"form-control mt-4\"\n                            id=\"task\"\n                            value={input}\n                            onChange={event=>setinput(event.target.value)}\n                                />\n                            <button type=\"submit\" className=\" btn btn-light  btn-block mt-5  \" onClick={()=>{add(input)}} >Add to do list\n                            </button>    \n                        </div>         \n                    </div>\n                </div>\n                <ListTask/>\n            </div>\n            );\n        }\n        export default Addtask;\n","import \"./App.css\";\nimport Addtask from \"./components/Addtask\";\nimport { Router,Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component={Addtask} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"../src/redux/Store\";\nReactDOM.render(\n   <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}